plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "com.google.protobuf" version "0.8.12"
	id 'idea'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

def protobufVersion = '3.12.0'
def protocVersion = protobufVersion
def grpcVersion = '1.30.2' // CURRENT_GRPC_VERSION

ext {
	set('springCloudVersion', "Hoxton.SR6")
}

repositories {
	mavenCentral()
}

protobuf {
	protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
	plugins {
		grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
	}
	generateProtoTasks {
		all()*.plugins { grpc {} }
	}
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
	main {
		java {
			srcDirs 'build/generated/source/proto/main/grpc'
			srcDirs 'build/generated/source/proto/main/java'
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'io.micrometer:micrometer-registry-prometheus:latest.release'

	implementation 'net.devh:grpc-server-spring-boot-starter:2.9.0.RELEASE'
	implementation "io.grpc:grpc-protobuf:${grpcVersion}"
	implementation "io.grpc:grpc-stub:${grpcVersion}"

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}